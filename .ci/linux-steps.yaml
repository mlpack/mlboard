steps:
# Checkout repository
- checkout: self
  clean: true
  fetchDepth: 1

# Install Build Dependencies.
# Install mlpack from master to get new functionalities instantly.
- script: |
    git clone --depth 1 https://github.com/mlpack/jenkins-conf.git conf
    git clone --depth 1 https://github.com/mlpack/mlpack.git
    mkdir data
    sudo add-apt-repository ppa:mhier/libboost-latest
    sudo apt-get update
    # Remove BOOST_ROOT from the environment to prevent attempting to use a
    # boost which is incompatible with the compiler.
    unset BOOST_ROOT
    echo "##vso[task.setvariable variable=BOOST_ROOT]"$BOOST_ROOT
    sudo apt-get install -y --allow-unauthenticated liblapack-dev g++ libboost1.70-dev libarmadillo-dev xz-utils
    curl https://data.kurg.org/armadillo-8.400.0.tar.xz | tar -xvJ && cd armadillo*
    cmake . && make && sudo make install && cd ..
  
    # Install cereal.
    wget https://github.com/USCiLab/cereal/archive/v1.3.0.tar.gz
    tar -xvzpf v1.3.0.tar.gz # Unpack into cereal-1.3.0/.
    cd cereal-1.3.0/
  displayName: 'Install Build Dependencies'

# Configure CMake Args for mlpack.
- script: |
    unset BOOST_ROOT
    cd mlpack && mkdir build && cd build && cmake $(CMakeArgs-mlpack) -DCEREAL_INCLUDE_DIR=../../cereal-1.3.0/include/ ..
  displayName: 'CMake for mlpack'

# Install mlpack
- script: cd mlpack/build && sudo make install -j2
  displayName: 'Install mlpack'

# Install protobuf
- script: |
    sudo apt-get update
    sudo apt-get install libprotobuf-dev protobuf-compiler
  displayName: 'Installing Protobuf'

# Configure mlboard (CMake)
- script: mkdir build && cd build && cmake -DCEREAL_INCLUDE_DIR=../cereal-1.3.0/include/ ..
  displayName: 'CMake for mlboard'

# Build mlboard
- script: cd build && make
  displayName: 'Build mlboard'

# Run test
- script: cd build && ./mlboard_tests
  displayName: 'Running test'
